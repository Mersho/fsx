before_script:
  - apt update -qq
  - apt install -y git make curl

stages:
  - buildAndInstall
  - test
  - compileScripts
  - sanitycheck
  - package

build&install-stockmono:
  image: ubuntu:20.04
  stage: buildAndInstall
  script:
    - ./scripts/CI/install_mono.sh

    - ./configure.sh
    - make
    - make install

build&install-newmono:
  image: ubuntu:20.04
  stage: buildAndInstall
  script:
    - ./scripts/CI/install_mono_from_microsoft_deb_packages.sh

    - ./configure.sh
    - make
    - make install

buildScripts-stockmono:
  image: ubuntu:20.04
  stage: compileScripts
  script:
    - ./scripts/CI/install_mono.sh

    - ./configure.sh && make install
    - ./scripts/test.sh
    - ./compileFSharpScripts.fsx

buildScripts-newmono:
  image: ubuntu:20.04
  stage: compileScripts
  script:
    - ./scripts/CI/install_mono_from_microsoft_deb_packages.sh

    - ./configure.sh && make install
    - ./scripts/test.sh
    - ./compileFSharpScripts.fsx

test-stockmono:
  image: ubuntu:20.04
  stage: test
  script:
    - ./scripts/CI/install_mono.sh

    - ./configure.sh && make install
    - ./scripts/test.sh

test-newmono:
  image: ubuntu:20.04
  stage: test
  script:
    - ./scripts/CI/install_mono_from_microsoft_deb_packages.sh

    - ./configure.sh && make install
    - ./scripts/test.sh

style:
  image: ubuntu:20.04
  stage: sanitycheck
  script:
    - ./scripts/CI/install_dotnet_sdk_from_microsoft_deb_packages.sh

    # NOTE: maintain fantomless version below in sync with .github/workflows/CI.yml
    - dotnet tool update --global fantomless-tool --version 4.7.996
    - $HOME/.dotnet/tools/fantomless --recurse --check .

#
# NOTE: snap package generation has been disabled because its Docker-in-Docker approach started failing
# FIXME: report bug to Canonical's snap team
#
#package:
#  image: ubuntu:20.04
#  stage: package
#
#  variables:
#    # Fixes:
#    # "Cannot connect to the Docker daemon. Is the docker daemon running on this host?"
#    DOCKER_HOST: tcp://docker:2375
#  services:
#    # To support docker-in-docker
#    - docker:dind
#
#  script:
#    - ./scripts/snap_build.sh
#
#  artifacts:
#    paths:
#      - fsx*.snap
#    expire_in: 50days
#
